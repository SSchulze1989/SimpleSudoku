<UserControl x:Class="SimpleSudoku.Views.CellControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SimpleSudoku.Views"
             xmlns:conv="clr-namespace:SimpleSudoku.Converter"
             xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="30" d:DesignWidth="30" Background="White">
    <UserControl.Resources>
        <conv:ValuePercentageConverter x:Key="ValuePercentageConverter"/>
        <conv:NotNullConverter x:Key="NotNullConverter"/>
        <Style x:Key="NotesTextblockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="26" />
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <ControlTemplate x:Key="CellTextBox" TargetType="{x:Type TextBoxBase}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#F5F5F5"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="BorderThickness" Value="4"/>
                    <Setter Property="Margin" Value="-1"/>
                    <Setter Property="Background" Value="#F0FAFA"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="26" />
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Template" Value="{StaticResource CellTextBox}"/>
            <Setter Property="BorderThickness" Value="1" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Value, Converter={StaticResource NotNullConverter}}" Value="True">
                    <Setter Property="Background" Value="#55F5DEB3"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Wrong}" Value="True">
                    <!--<Setter Property="BorderBrush" Value="Red"/>-->
                    <Setter Property="Foreground" Value="Red"/>
                    <Setter Property="Background" Value="#11FF0000"/>
                </DataTrigger>
                <Trigger Property="IsReadOnly" Value="True">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Background" Value="#f0f0f0"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="CellGrid">
        <TextBox x:Name="ValueTextBox" Text="{Binding Value, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}" PreviewKeyDown="ValueTextBox_PreviewKeyDown"
                 Cursor="Hand" CaretBrush="Transparent" IsReadOnly="{Binding IsReadOnly}" />
        <!--<toolkit:MaskedTextBox x:Name="Test" Text="{Binding Value, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}" PreviewTextInput="ValueTextBox_PreviewTextInput" 
                               Mask="9"/>-->
        <!--<Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding Notes.Values[0]}" Grid.Row="0" Grid.Column="0"/>
            <TextBlock Text="{Binding Notes.Values[1]}" Grid.Row="0" Grid.Column="1"/>
            <TextBlock Text="{Binding Notes.Values[2]}" Grid.Row="0" Grid.Column="2"/>
            <TextBlock Text="{Binding Notes.Values[3]}" Grid.Row="1" Grid.Column="0"/>
            <TextBlock Text="{Binding Notes.Values[4]}" Grid.Row="1" Grid.Column="1"/>
            <TextBlock Text="{Binding Notes.Values[5]}" Grid.Row="1" Grid.Column="2"/>
            <TextBlock Text="{Binding Notes.Values[6]}" Grid.Row="2" Grid.Column="0"/>
            <TextBlock Text="{Binding Notes.Values[7]}" Grid.Row="2" Grid.Column="1"/>
            <TextBlock Text="{Binding Notes.Values[8]}" Grid.Row="2" Grid.Column="2"/>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Value}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>    
            </Grid.Style>
        </Grid>-->
        <Grid KeyboardNavigation.DirectionalNavigation="Contained">
            <ItemsControl ItemsSource="{Binding Notes.Values}" Focusable="False" IsTabStop="False" KeyboardNavigation.DirectionalNavigation="None">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" 
                               ItemWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=ActualWidth, Converter={StaticResource ValuePercentageConverter}, ConverterParameter='0,33'}" 
                               ItemHeight="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=ActualHeight, Converter={StaticResource ValuePercentageConverter}, ConverterParameter='0,33'}"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource NotesTextblockStyle}">
                        </TextBlock>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Value, Converter={StaticResource NotNullConverter}}" Value="True">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
        <Grid DataContext="{Binding Hint}" IsHitTestVisible="False" Focusable="False">
            <Border BorderThickness="0" Background="#1000FF00">
                <TextBlock x:Name="Hint" Text="{Binding}" Foreground="#80AAAAAA"
                       VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Border>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Converter={StaticResource NotNullConverter}}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
    </Grid>
</UserControl>
